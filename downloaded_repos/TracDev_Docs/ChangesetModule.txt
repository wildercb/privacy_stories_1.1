Ideas for improving the changeset view
User Interface
Current Status
The display of the changeset is stable across all Trac releases, for example our
changeset:17
in each of the demos:
0.12
,
1.0
,
1.2
,
1.3
Here is how the same changeset looks in
â€‹
github
.
Convergence
The links on the file entries at the top currently directly lead to the file browser and only the (diff) links get you to the actual diff. I think we should reconsider this choice as in github the file entries link to the diff instead.
An alternative would be to directly inline the changes below the path, as done in FishEye and Gitorious for example, see
#515
.
The Redmine/ChiliProject way of showing the tree is also interesting, but having the diffs on a separate page is not.
Related tickets
Most enhancement requests concerning the "version control/changeset view" probably apply:
#53
plugin infrastructure for rendering diff HTML previews
#515
Collapsible diff display
#781
svn:log editing
#1200
Provide syntax to link to file-differences from svn log messages
#2035
Changeset commenting
#2465
Add "custom query" functionality for changesets
#3694
Code coloring in diff
#4080
[Patch] Detect charset using enca or chardet
#4887
Option for changeset viewer to show added and deleted files inline
#5170
max_diff_bytes should be honored even if only one file has changed
#6424
Next/previous diff support
#6473
Negative revisions for changeset
#6638
Allow file exclusions in diffs
#6709
Extended 'view diff' feature does not update the browsing position
#6783
Diff Tabular / Unified switcher highlights the wrong way around?
#6807
Option to skip revisions with lots of added files
#6858
Improve intra-line diff highlighting
#9172
Trac diff highlighting start and end points
#10531
Annotate in changeset diff view
#11439
Git changeset "Branches" property should link to branch logs
#11446
Cummulative diff view for non-contiguous changesets
#12745
Changeset view with single revision which has many files is so slow
#13083
Unified diff with contextall
#13101
Unified diff in git format?
The bugs are more about the generation of the changesets (
#4474
,
#5420
,
#5515
,
#5549
,
#7486
,
#7975
,
#8146
,
#9621
,
#9946
,
#10101
,
#10267
,
#10812
,
#10813
,
#10914
,
#12484
) and are not so relevant for the user interface except:
#5549
Improve diff message "no files"